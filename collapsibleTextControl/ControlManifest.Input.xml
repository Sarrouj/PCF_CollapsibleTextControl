<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="PCFControl" constructor="collapsibleTextControl" version="0.0.1" display-name-key="collapsibleTextControl" description-key="collapsibleTextControl description" control-type="standard" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="TextArea" display-name-key="textArea" description-key="Collapsable Textarea" of-type-group="Text" usage="bound" required="true" />
    <property name="Height" display-name-key="TextArea Height" description-key="Collapsable Textarea Height" of-type="Whole.None" usage="input" required="true" default-value="100"/>
    <type-group name="Text">
        <type>Multiple</type>
        <type>SingleLine.Text</type>
        <type>SingleLine.TextArea</type>
      </type-group>
    <property name="FluentUIV9Theme" display-name-key="Fulent UI Theme" description-key="Select a Theme for the checkBox" of-type="Enum" usage="input" required="true">
      <value 
      name="Web Light"
      display-name-key="Web Light Theme">webLightTheme</value>
    <value 
      name="Web Dark"
      display-name-key="Web Dark Theme">webDarkTheme</value>
    <value 
      name="Teams Light"
      display-name-key="Teams Light Theme">teamsLightTheme</value>
    <value
      name="Teams Dark"
      display-name-key="Teams Dark Theme">teamsDarkTheme</value>
    <value 
      name="Teams High Contrast"
      display-name-key="Teams High Contrast">teamsHighContrastTheme</value>
    </property>
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <css path="css/Style.css" order="1" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/collapsibleTextControl.css" order="1" />
      <resx path="strings/collapsibleTextControl.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>
